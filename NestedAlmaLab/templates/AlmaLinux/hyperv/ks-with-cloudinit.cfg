# AlmaLinux 9 Kickstart Configuration with cloud-init support
# This kickstart file builds a template that supports cloud-init for post-deployment configuration

# Installation method
text
cdrom

# Language and keyboard
lang en_US.UTF-8
keyboard us

# Network configuration - DHCP for build, cloud-init will configure static later
network --bootproto=static --ip=192.168.200.100 --netmask=255.255.255.0 --gateway=192.168.200.1 --nameserver=8.8.8.8 --hostname=almalinux-template --device=eth0 --activate

# Root password (template default - cloud-init can change this)
rootpw packer

# User account (template default - cloud-init can add more users)
user --name=labuser --password=labpass123! --groups=wheel

# Authentication
authselect select minimal with-faillock without-nullok

# Timezone
timezone UTC

# Partitioning (automatic LVM partitioning)
autopart --type=lvm
clearpart --all --drives=sda

# Bootloader
bootloader --location=mbr

# SELinux
selinux --enforcing

# Firewall
firewall --enabled --ssh

# Services
services --enabled=sshd,NetworkManager,cloud-init,cloud-config,cloud-final

# Package installation
%packages --ignoremissing --excludedocs
@core
@standard
# Cloud-init packages
cloud-init
cloud-utils-growpart

# Network and system management
NetworkManager
NetworkManager-wifi
network-scripts
net-tools
wget
curl
rsync

# System utilities
vim-enhanced
nano
htop
tree
unzip
tar
which
sudo
man-pages

# Development tools (optional)
git
gcc
make

# Hyper-V integration
hyperv-daemons
cifs-utils

# Remove unnecessary packages to save space
-biosdevname
-iprutils
-plymouth*
-alsa-*
-iwl*firmware
%end

# Post-installation configuration
%post --log=/var/log/ks-post.log

#!/bin/bash

echo "Starting post-installation configuration..." >> /var/log/ks-post.log

# Configure SSH for password authentication
echo "Configuring SSH..." >> /var/log/ks-post.log
sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config

# Enable and configure cloud-init
echo "Configuring cloud-init..." >> /var/log/ks-post.log

# Create cloud-init configuration
cat > /etc/cloud/cloud.cfg << 'EOF'
# Cloud-init configuration for AlmaLinux template
users:
  - default

disable_root: false
ssh_pwauth: True

# Cloud init modules
cloud_init_modules:
  - migrator
  - seed_random
  - bootcmd
  - write-files
  - growpart
  - resizefs
  - disk_setup
  - mounts
  - set_hostname
  - update_hostname
  - update_etc_hosts
  - ca-certs
  - rsyslog
  - users-groups
  - ssh

cloud_config_modules:
  - ssh-import-id
  - locale
  - set-passwords
  - yum-add-repo
  - ntp
  - timezone
  - disable-ec2-metadata
  - runcmd

cloud_final_modules:
  - package-update-upgrade-install
  - write-files-deferred
  - puppet
  - chef
  - mcollective
  - salt-minion
  - rightscale_userdata
  - scripts-vendor
  - scripts-per-once
  - scripts-per-boot
  - scripts-per-instance
  - scripts-user
  - ssh-authkey-fingerprints
  - keys-to-console
  - phone-home
  - final-message
  - power-state-change

# System info
system_info:
  default_user:
    name: labuser
    lock_passwd: false
    gecos: Lab User
    groups: [wheel, adm, systemd-journal]
    sudo: ["ALL=(ALL) NOPASSWD:ALL"]
    shell: /bin/bash
  distro: rhel
  paths:
    cloud_dir: /var/lib/cloud
    run_dir: /run/cloud-init
  ssh_svcname: sshd

# Data sources
datasource_list: [ NoCloud, None ]
datasource:
  NoCloud:
    # Support for NoCloud data source (ISO or files)
    seedfrom: /var/lib/cloud/seed/nocloud/
EOF

# Create cloud-init NoCloud directory
mkdir -p /var/lib/cloud/seed/nocloud

# Configure cloud-init to run on every boot for NoCloud
cat > /etc/cloud/cloud.cfg.d/99_nocloud.cfg << 'EOF'
# Enable NoCloud data source
datasource_list: [ NoCloud ]
datasource:
  NoCloud:
    # Look for seed data in multiple locations
    seedfrom: /var/lib/cloud/seed/nocloud/
EOF

# Enable cloud-init services
systemctl enable cloud-init-local
systemctl enable cloud-init
systemctl enable cloud-config
systemctl enable cloud-final

echo "Cloud-init services enabled" >> /var/log/ks-post.log

# Configure NetworkManager to be cloud-init friendly
echo "Configuring NetworkManager for cloud-init..." >> /var/log/ks-post.log
cat > /etc/NetworkManager/conf.d/99-cloud-init.conf << 'EOF'
[main]
dns=default
rc-manager=file

[logging]
level=INFO
domains=ALL

[device]
wifi.scan-rand-mac-address=no
EOF

# Ensure NetworkManager manages all interfaces
rm -f /etc/sysconfig/network-scripts/ifcfg-*

# Configure network interface to be managed by NetworkManager
cat > /etc/NetworkManager/system-connections/eth0.nmconnection << 'EOF'
[connection]
id=eth0
type=ethernet
interface-name=eth0
autoconnect=true

[ipv4]
method=auto

[ipv6]
method=ignore
EOF

chmod 600 /etc/NetworkManager/system-connections/eth0.nmconnection

# Configure sudo for wheel group (cloud-init users)
echo '%wheel ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/wheel-nopasswd

# Set up log rotation for cloud-init
cat > /etc/logrotate.d/cloud-init << 'EOF'
/var/log/cloud-init*.log {
    daily
    missingok
    rotate 7
    compress
    notifempty
    create 644 root root
}
EOF

# Verify labuser creation
if id "labuser" &>/dev/null; then
    echo "User 'labuser' successfully created" >> /var/log/ks-post.log
    # Ensure labuser can sudo
    usermod -aG wheel labuser
    echo "Added labuser to wheel group" >> /var/log/ks-post.log
else
    echo "WARNING: User 'labuser' was not created!" >> /var/log/ks-post.log
fi

# Create a simple test script for cloud-init
cat > /usr/local/bin/test-cloud-init << 'EOF'
#!/bin/bash
echo "=== Cloud-init Status ==="
cloud-init status --long

echo -e "\n=== Cloud-init Configuration ==="
if [ -f /var/lib/cloud/seed/nocloud/user-data ]; then
    echo "NoCloud user-data found:"
    head -20 /var/lib/cloud/seed/nocloud/user-data
else
    echo "No NoCloud user-data found"
fi

echo -e "\n=== Network Configuration ==="
ip addr show
nmcli connection show

echo -e "\n=== Recent Cloud-init Logs ==="
tail -20 /var/log/cloud-init.log 2>/dev/null || echo "No cloud-init logs found"
EOF

chmod +x /usr/local/bin/test-cloud-init

# Final system configuration
echo "Finalizing system configuration..." >> /var/log/ks-post.log

# Update all packages to latest
dnf update -y >> /var/log/ks-post.log 2>&1

# Clean package cache
dnf clean all >> /var/log/ks-post.log 2>&1

# Clear machine-id (will be regenerated on first boot)
echo -n > /etc/machine-id

# Clear SSH host keys (will be regenerated by cloud-init)
rm -f /etc/ssh/ssh_host_*

# Clear network persistent rules
rm -f /etc/udev/rules.d/70-persistent-net.rules

# Clean logs
find /var/log -type f -name "*.log" -exec truncate -s 0 {} \;

echo "Post-installation configuration completed successfully" >> /var/log/ks-post.log
echo "Cloud-init is ready to configure the system on first boot" >> /var/log/ks-post.log

%end

# Reboot after installation
reboot
