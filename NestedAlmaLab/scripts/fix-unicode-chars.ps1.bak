# Fix Unicode Characters in PowerShell Scripts
# This script replaces problematic Unicode characters with ASCII equivalents
# to prevent display issues on Windows PowerShell console

param(
    [switch]$WhatIf = $false
)

Write-Host "=== Unicode Character Fixer for PowerShell Scripts ===" -ForegroundColor Cyan
Write-Host "This will fix Unicode quotes, dashes, and other characters" -ForegroundColor White
Write-Host "========================================================"

# Unicode to ASCII character mappings
$characterMappings = @{
    '"' = '"'    # Left double quotation mark
    '"' = '"'    # Right double quotation mark
    ''' = "'"    # Left single quotation mark
    ''' = "'"    # Right single quotation mark
    '–' = '-'    # En dash
    '—' = '-'    # Em dash
    '…' = '...'  # Horizontal ellipsis
    '•' = '*'    # Bullet
    '→' = '->'   # Right arrow
}

# Get all PowerShell script files
$scriptFiles = Get-ChildItem -Path (Join-Path $PSScriptRoot "*") -Include "*.ps1" -File

if ($scriptFiles.Count -eq 0) {
    Write-Host "No PowerShell script files found in the current directory." -ForegroundColor Yellow
    exit 0
}

Write-Host "Found $($scriptFiles.Count) PowerShell script files to process:`n"

$totalFilesProcessed = 0
$totalCharactersReplaced = 0

foreach ($file in $scriptFiles) {
    Write-Host "Processing: $($file.Name)" -ForegroundColor Yellow
    
    try {
        # Read file content
        $content = Get-Content $file.FullName -Raw -Encoding UTF8
        $originalContent = $content
        $replacements = 0
        
        # Apply character mappings
        foreach ($unicodeChar in $characterMappings.Keys) {
            $asciiChar = $characterMappings[$unicodeChar]
            $matches = ($content | Select-String $unicodeChar -AllMatches).Matches.Count
            if ($matches -gt 0) {
                Write-Host "  - Replacing $matches instances of '$unicodeChar' with '$asciiChar'" -ForegroundColor Gray
                $content = $content -replace [regex]::Escape($unicodeChar), $asciiChar
                $replacements += $matches
            }
        }
        
        if ($replacements -gt 0) {
            if ($WhatIf) {
                Write-Host "  [WHAT-IF] Would replace $replacements characters in $($file.Name)" -ForegroundColor Cyan
            } else {
                # Write the corrected content back to file
                Set-Content -Path $file.FullName -Value $content -Encoding UTF8
                Write-Host "  [FIXED] Replaced $replacements characters in $($file.Name)" -ForegroundColor Green
            }
            $totalCharactersReplaced += $replacements
            $totalFilesProcessed++
        } else {
            Write-Host "  [OK] No Unicode characters found in $($file.Name)" -ForegroundColor Green
        }
        
    } catch {
        Write-Host "  [ERROR] Failed to process $($file.Name): $($_.Exception.Message)" -ForegroundColor Red
    }
}

Write-Host "`n=== Summary ===" -ForegroundColor Cyan
if ($WhatIf) {
    Write-Host "WHAT-IF MODE - No files were actually modified" -ForegroundColor Yellow
    Write-Host "Would process $totalFilesProcessed files" -ForegroundColor White
    Write-Host "Would replace $totalCharactersReplaced Unicode characters" -ForegroundColor White
} else {
    Write-Host "Processed $totalFilesProcessed files" -ForegroundColor Green
    Write-Host "Replaced $totalCharactersReplaced Unicode characters with ASCII equivalents" -ForegroundColor Green
    
    if ($totalCharactersReplaced -gt 0) {
        Write-Host "`nAll PowerShell scripts should now work correctly on Windows PowerShell console!" -ForegroundColor Green
    } else {
        Write-Host "`nNo Unicode characters were found - scripts are already clean!" -ForegroundColor Green
    }
}

Write-Host "`nUse -WhatIf parameter to preview changes without modifying files." -ForegroundColor Gray
